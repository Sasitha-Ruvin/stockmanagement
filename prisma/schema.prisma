generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String?
  username String @unique
  password String
}

model Material {
  id          Int             @id @default(autoincrement())
  name        String          @unique
  description String?
  quantity    Int
  supplier    String?
  unitPrice   Float
  isDeleted   Boolean         @default(false)
  purchases   PurchaseItem[]  // Corrected the relation to point to PurchaseItem
  issues      IssueItems[]
}

model MaterialIssue{
  id          Int             @id @default(autoincrement())
  issueDate   DateTime
  issueItems   IssueItems[]
  issueReason  String?
  issuedBy     String?
  issuedTo     String?
}

model IssueItems {
  id              Int             @id @default(autoincrement())
  quantity        Int
  material        Material        @relation(fields:[materialId], references:[id])
  materialId      Int
  materialissue   MaterialIssue   @relation(fields:[materialissueId], references:[id])
  materialissueId Int
}

model Purchase {
  id            Int             @id @default(autoincrement())
  purchaseDate  DateTime
  purchaseItems PurchaseItem[]
  total         Float?
  supplier      String?
  purchase      String?
}

model PurchaseItem {
  id          Int       @id @default(autoincrement())
  quantity    Int
  unitPrice   Float?
  unitTotal   Float?
  material    Material   @relation(fields: [materialId], references: [id])
  materialId  Int
  purchase    Purchase   @relation(fields: [purchaseId], references: [id])
  purchaseId  Int
}


model EquipmentStock {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  quantity    Int
  unitPrice   Float
  supplier    String?
  isDeleted   Boolean         @default(false)
  equipments  EquipmentItem[]
 
}

model EquipPurchase {
  id                    Int       @id @default(autoincrement())
  purchaseDate          DateTime
  purchaseEquipment     EquipmentItem[]
  totalPrice            Float     @default(0) 
}

model EquipmentItem {
  id                   Int        @id @default(autoincrement())
  quantity             Int
  equipment            EquipmentStock   @relation(fields:[equipmentId], references:[id])
  equipmentId          Int
  equippurchase        EquipPurchase    @relation(fields:[purchaseId], references:[id])
  purchaseId           Int
}




model RentalStocks {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  quantity    Int
  unitPrice   Float
  isDeleted   Boolean    @default(false)
}



model Supplier {
  id          Int    @id @default(autoincrement())
  name        String
  contact     String
  address     String
  email       String
}



